@page "/people"
@using LexiconLMS.App.Client.Services;
@using Microsoft.AspNetCore.Authorization;
@using LexiconLMS.App.Shared;
@inject LMSClient lsmClient;
@attribute [Authorize]


<PageTitle>People</PageTitle>


@*<AuthorizeView>
    <Authorized>
        <p>@(@context.User.IsInRole("Admin") ? "Admin" : "Inte admin")</p>
        <p>@(@context.User.IsInRole("Student") ? "Student" : "Inte student")</p>
    </Authorized>
</AuthorizeView>

<AuthorizeView Roles="Admin">
    <p>You have an 'Admin' role claim.</p>
</AuthorizeView>*@

@if (Course.Id == 0)
{
    <div class="container">
        <div class="text-center">
             <p><em>Loading...</em></p>
                <div class="spinner-border" role="status">
                 <span class="sr-only"></span>
                </div>
         </div>
    </div>
}
else
{
    <div class="container">
        <div class="align-middle d-flex  flex-row  justify-content-end align-items-center">
            <h1 class="text-muted pe-2 ">
                @Course.Title
            </h1>
            <span class="badge text-muted py-auto align-middle ps-2">
                <span class="d-block">@($"{Course?.StartTime.ToString("yy-MM-dd")}")</span>
                <span class="d-block">@($"{Course?.EndTime.ToString("yy-MM-dd")}")</span>
            </span>
        </div>
    </div>

    <BlockGroupTemplate Items="UserItems" Context="item" Collapsable="true" Cols="6">
        <GroupHeader>Students</GroupHeader>
        <CardTemplate Context="item">
            <CardContact user="item"></CardContact>
        </CardTemplate>
    </BlockGroupTemplate>
}

@*<h1 class="text-end text-muted">.Net Core 2022-2023</h1>
<CardGroupPeople title="Teachers" cols="4"></CardGroupPeople>
<CardGroupPeople title="Students" cols="6"></CardGroupPeople>*@

@code {
    private CourseDto Course { get; set; } = new();
    private List<ApplicationUserDto> UserItems { get; set; } = new();


    protected override async Task OnInitializedAsync()
    {
        Course = (await lsmClient.GetByIdAsync<CourseDto>(1, "api/courses"));
        UserItems = Course.Users;
    }

}



